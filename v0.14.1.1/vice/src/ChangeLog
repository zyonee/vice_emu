Mon Mar 23 11:29:01 1998  Ettore Perazzoli  <ettore@comm2000.it>

	* Version 0.14.1.1.

	* c64/vicii.c (store_vic): Changing a bit in to $D017 from 1 to 0
 	at cycle 54 causes the sprite memory pointer to be incremented by
 	3.  (I am not sure that this is really right, though!)

	* c64/vicii.c: #include "sprcrunch.h".
	(store_vic): When a bit in $D017 changes from 1 to 0 and the
 	`exp_flag' of the sprite was zero, set its `memptr_inc' according
 	to `sprite_crunch_table'.

	* include/sprcrunch.h: New file.  New variable
 	`sprite_crunch_table'.

Sun Mar 22 17:46:12 1998  Ettore Perazzoli  <ettore@comm2000.it>

	* c64/vicii.c (RASTER_CHAR): Incremented by 2.  All the occurences
 	updated so that the behavior remains the same.

	* c64/c64mem.c (initialize_memory): Install `store_vbank_3fxx()'
	and `store_vbank_39xx()' as the hooks for $39xx and $3Fxx
	addresses in the video bank.

	* c64/vicii.c: New variables `vbank_39ff', `vbank_3fff',
 	`idle_data_ptr'.
	(_draw_idle, get_idle): Use `idle_data_ptr'.
	(draw_idle_foreground_2x, draw_idle_foreground): Likewise.
	(store_vbank): Made inline.
	(store_vbank_3fxx, store_vbank_39xx): New functions.
	(set_memory_ptrs): Update `vbank_39ff' and `vbank_3fff' when the
 	video bank is changed.  Dispatch the `int_rasterdraw()' alarm if
 	pending.
	(set_video_mode): Update `idle_data_ptr'.

	* c64/vicii.c (int_rasterfetch): New, cleaner algorithm.  It also
 	couple of bugs in the old one.

Sun Mar 22 17:19:01 1998  Andreas Boose  <boose@unixserv.rz.fh-hannover.de>

	* true1541.c (GCR_find_sector_header): If the header is not the
	one we look for try again instead of abording the search.
	(convert_sector_to_GCR): Added gap between sectors.

	* true1541.c: New constants `speed_map', `raw_track_size'.
	(set_half_track): Calculate the value of `GCR_track_size' using
 	them.

Sat Mar 21 20:56:00 1998  Andreas Boose  <boose@unixserv.rz.fh-hannover.de>

	* true1541.c: Updated TODO list.
	(true1541_sync_found): Do not change `bits_moved' as the current
	code cannot cope with non byte aligned writes.
	(GCR_find_sector_header): Handle killer tracks more gracefully.

Fri Mar 20 17:03:00 1998  Andreas Boose  <boose@unixserv.rz.fh-hannover.de>

	* true1541.c (read_image_GCR): Enlarged tracks to 7693 bytes.
  	This is not 100% correct, but sufficient for the moment.  Raw
 	track filled with 0xff to avoid `20, READ ERROR'.
	(convert_GCR_to_sector, true1541_set_half_track): Changed to
 	handle non-fixed sector layout.
	(GCR_find_sector_header, GCR_find_sector_data): New functions to
 	find a sector in a track.
	(true1541_move_head): Write back current track before moving the
 	head!
	(GCR_data_writeback): Call the new functions to find a sector.
  	Print error messages whenever non-standard GCR data cannot be
 	written back to the disk image.

Tue Mar 17 12:44:55 MET 1998  Andre Fachat (a.fachat@physik.tu-chemnitz.de)

	* arch/unix/kbd.c: Changed some joystick-related `#ifdef PET's to
 	include PET joystick emulation.
	(kbd_event_handler) [PET]: Call `handle_joy_emu()' only when the
 	`numpadJoystick' resource is set.

	* arch/unix/menu.h: Change some joystick-related `#ifdef PET's to
        include PET joystick emulation.
	(JoystickSubmenu) [PET]: Add "Enable Numpad Joystick" entry.
	(PetUserportSubmenu): Add "Joystick Settings" menu entry.

	* arch/unix/ui_xaw.c: Change some joystick-related `#ifdef PET's
 	to include PET joystick emulation, esp. the prototypes.
	(UiToggleNumpadJoystick): New function: toggles the
 	`numpadJoystick' resource.

	* arch/unix/vsync.c, main.c: Changed some joystick-related `#ifdef
 	PET's to include PET joystick emulation.

	* include/resources.h: New resource `numpadJoystick'.

	* pet/viap.def (read_viap): Reading VIA PA now reads the joystick
 	values from the userport.

	* resources.c: Changed some joystick-related `#ifdef PET's to
 	include PET joystick emulation.  New `NumpadJoystick' resource and
 	`+/-npjoystick' option for the PET.

Sat Jan 24 21:32:00 1998  Daniel Sladic  <sladic@eecg.toronto.edu>

	* true1541.c: Changed track formats so that each track has about
 	the same # of bits as a real track.  Changed header gap to 9 (from
 	8) bytes.  Added support for non-fixed sector placement inside
 	tracks (find_GCR_sector).



See `ChangeLog.1' for earlier changes.