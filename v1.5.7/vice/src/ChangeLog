2000-08-12  Andreas Boose  <boose@linux.rz.fh-hannover.de>

	* Version 1.5.7.

	* keyboard.h: Commented out `joystick_bits_t'.

	* attach.c, fsdevice.c, drive/drive-resources.c,
	arch/unix/print.c, arch/unix/rs232.c: Use extra resource
	parameter to eliminate many functions doing almost the same.

	* ChangeLog, ChangeLog.1, ChangeLog.2, ChangeLog.3: Splitted
	out new file.

2000-08-11  Andreas Matthies  <andreas.matthies@gmx.net>

	* arch/beos/Makefile.am: new files ui_datasette.cc/h,
	ui_sound.cc/h; some files changes from .c to .cc

	* arch/beos/archdep.c: implemented (archdep_spawn),
	(archdep_quote_parameter),(archdep_filename_parameter);
	compressed files are supported now

	* arch/beos/c128ui.c,c610ui.c,petui.c,vic20ui.c: changed
	to .cc and implemented some machine specific menu items

	* arch/beos/constants.h: more menu IDs

	* arch/beos/joystick.cc/h: rewritten; now all available
	hardware joysticks are scaned and supported

	* arch/beos/kbd.c: corrected kbd_code_to_string table

	* arch/beos/ui.cc: includes ui_datasette.h,ui_sound.h;
	(ui_dispatch_events) handles more events
	(ui_display_image) can handle tape images now
	(ui_display_tape_current_image): new function
	(ui_statusbar_update) also updates the tape image name

	* arch/beos/ui_datasette.cc/h: implement the datasette
	settings dialog

	* arch/beos/ui_sound.cc/h: implement the sound settings
	dialog

	* arch/beos/ui_drive.cc: fixed includes

	* arch/beos/ui_joystick.cc/h: now the Keyset can be defined
	and the detected hardware sticks are supported

	* arch/beos/vicemenu.cc: displays more menu items

	* arch/beos/vicewindow.cc: some changes to handle the new
	video engine

	* arch/beos/video.cc,videoarch.h: changed the video engine
	a little; now the frame_buffer is directly represented by
	a BBitmap which makes it ~20% faster

	* arch/msdos/statusbar.c: fixed (statusbar_prepare) to avoid
	crashes when statusbar is activated from the menu

	* uiapi.h: new function (ui_display_tape_current_image)

	* msdos/ui.c,os2/ui.c,riscos/ui.c,unix/ui.h,unix/uicommands.c,
	unix/x11/gnome/ui.c,unix/x11/xaw/ui.c,win32/ui.c,msdos/ui.c
	small changes to handles the new uiapi-function (dummies
	respectively small changes in unix that already used this
	function)

	* arch/win32/rescbm2.rc: removed sid-settings from CBM2-menu

	* c128/c128.c: (machine_change_timing) handles NTSCOLD

	* tape.c: new include uiapi.h
	(tape_attach_image),(tape_detach_image) use the new
	ui_display_tape_current_image

2000-08-08  Andreas Dehmel  <dehmel@forwiss.tu-muenchen.de>

	* arch/riscos/uiimage.c: support new autostart approach.

	* arch/riscos/uimsgwin.c: small type renaming.

	* autostart.c: avoid one superfluous attach/detach cycle in
	autostart_tape() and autostart_disk().

2000-08-08  Thomas Bretz  <tbretz@physik.tu-muenchen.de>

	* arch/os2/archdep.c: some small changes to the logging
 
	* arch/os2/console.c: use of [1024] is now a part of the past
 
	* arch/os2/dialogs/dialogs.h: CB_READONLY, vsid_dialog added

	* arch/os2/dialogs/dialogs.rc: LED8,9 layout changed,
	Readonly added, vsid dlg added
 
	* arch/os2/dialogs/dlg-cmdopt.c: small changes
 
	* arch/os2/dialogs/dlg-contents.c: autostart_autodetect uses
	the number now
 
	* arch/os2/dialogs/dlg-drive.c: readonly, check_drive_type
	support added
 
	* arch/os2/dialogs/dlg-monitor.c: WM_INSERT: free(mp1) added
 
	* arch/os2/dialogs/dlg-vsid.c: added
 
	* arch/os2/dialogs/Makefile.am: dlg-vsid.c added
 
	* arch/os2/joystick.c: restructured.
 
	* arch/os2/joystick.h: moved some definitions to joystick.c
 
	* arch/os2/kbd/proc.c: small changes
 
	* arch/os2/kbd.c: removed a small compiler error from last
	patch
 
	* arch/os2/main_exit.c: small changes
 
	* arch/os2/mouse.c: adde joystick_clear, XVIC and
	_mouse_enabled handling
 
	* arch/os2/uicmdline.c: uses xmsprintf now
 
	* arch/os2/vac++/incl/dialogs.icc: dlg-vsid.c added
 
	* arch/os2/vac++/*.icc: lpng106-path --> lpng
 
	* arch/os2/vac++/lpng.icc: added
 
	* arch/os2/vac++/lzlib.icc: added
 
	* arch/os2/vac++/Makefile.am: lzlib.icc, lpng.icc added
 
	* arch/os2/video.c: moved video_close --> main_exit, some
	changes to logging, added some comments, move creation of
	Keyboard semaphopre to video_open, added hDiveInst handling to
	wmVrn[Dis,En]abled, canvas_refresh, vsid_mode handling to
	canvas_create,
   
	* arch/os2/videoarch.h: small changes
 
	* arch/os2/vsidui.c: base functionality added
 
	* arch/os2/vsyncarch.c: small changes to shutdown

	* autostart.c: small changes to logging
 
	* c64/c64.c: more logical structure concerning vsid_mode

	* keyboard.[hc]: joystick_clear added.
 
	* keyboard.h: enum for joystick directions added
 
	* main.c: some changes concerning resources for os2 (no
	console mode), more logical structure concerning vsid_mode
   
	* monitor/mon_parse.c: prevent a compiler warning
 
2000-08-06  Andreas Boose  <boose@linux.rz.fh-hannover.de>

	* Version 1.5.6.

	* arch/win32/fullscreen.c, arch/win32/video.c: Define
	`IID_IDirectDraw2' if there is not GUIDLIB.

	* drive/drive.c (drive_check_type): Mask out dual drives for
	second drive and other invalid combinations.

	* attach.c, attach.h: Added support for opening disks read
	only.

	* main.c (init_cmdline_options): Initialize attach specific
	command line options.

	* vdrive/vdrive.c, vdrive/vdrive.h
	(vdrive_internal_open_disk_image): Set `read_only' before
	`disk_image_open' is called.

	* c1541.c (open_disk_image): Changed likewise.

	* diskimage.c (disk_image_open): Get the open mode from the
	`read_only' flag of the image struct.

	* imagecontents.c (image_contents_read_disk): Open disk read
	only.

	* resources.c, resources.h: Added support for a parameter to
	the resource set function.

	* attach.c, datasette.c, fsdevice.c, log.c, main.c, sound.c,
	sysfile.c, traps.c, vsync.c, vdc/vdc-resources.c, aciacore.c,
	prdevice.c, pruser.c, rsuser.c, drive/drive-resources.c,
	vicii/vicii-resources.c, crtc/crtc-resources.c, sid/sid.c,
	c64/c64cartridge.c, c64/c64mem.c, c64/psid.c, c128/c128mem.c,
	c128/c128mmu.c, c128/z80mem.c, vic20/vic-resources.c,
	vic20/vic20cartridge.c, vic20/vic20mem.c, pet/pet.c,
	pet/petmem.c, pet/petpia1.c, cbm2/c610mem.c,
	arch/unix/joystick.c, arch/unix/kmap.c, arch/unix/mouse.c,
	arch/unix/petkmap.c, arch/unix/print.c, arch/unix/rs232.c,
	arch/unix/vsync.c, arch/unix/x11/kbd.c, arch/unix/x11/video.c,
	arch/unix/x11/ui-resources.c, arch/win32/joystick.c,
	arch/win32/kbd.c, arch/win32/mouse.c, arch/win32/print.c,
	arch/win32/ui.c, arch/msdos/joystick.c, arch/msdos/kbd.c,
	arch/msdos/mouse.c, arch/msdos/print.c, arch/msdos/ui.c,
	arch/msdos/video.c, arch/msdos/vsync.c, arch/riscos/kbd.c,
	arch/riscos/joystick.c, arch/riscos/print.c,
	arch/riscos/rs232.c, arch/riscos/ui.c, arch/riscos/video.c,
	arch/riscos/vsync.c, arch/os2/unused/video_gpi.c,
	arch/os2/unused/vsync.c, arch/os2/joystick.c, arch/os2/kbd.c,
	arch/os2/mouse.c, arch/os2/rs232.c, arch/os2/video.c,
	arch/os2/ui.c,, arch/os2/kbd/kmap-pet.c, arch/os2/kbd/kmap.c,
	arch/beos/kbd.c, arch/beos/mouse.c, arch/beos/print.c,
	arch/beos/vsync.c: Added parameter to resource tables.

2000-08-06  pottendo  <pottendo@utanet.at>

	* info.c: Updated contribution.

2000-08-04  Andreas Boose  <boose@linux.rz.fh-hannover.de>

	* Version 1.5.5.

	* autostart.c: Fixed warnings.

2000-08-04  Tibor Biczo  <crown@matavnet.hu>

	* arch/win32/fullscreen.c, arch/win32/video.c: Added
	GCC compatibility code.

2000-08-03  Thomas Bretz  <tbretz@physik.tu-muenchen.de>

	* arch/os2/dialogs/dlg-contents.c: changed
	autostart_autodetect from name to number
   
	* autostart.c: made reboot_for_autostart threadsafe for OS/2,
	fixed problems with open files when determin program_names
	from number

2000-08-03  Tibor Biczo  <crown@matavnet.hu>

	* arch/win32/Makfile.am: Added fullscreen.c and fullscreen.h to
	filelist.

	* arch/win32/arch.dsp: Added fullscreen.c to project.

	* arch/win32/c128.dsp: Added daa.c to project.

	* arch/win32/fullscreen.c: New file. Contains functions for
	fullscreen mode on Win32.

	* arch/win32/fullscreen.h: New file.

	* arch/win32/res.h: Added fullscreen related resource values.

	* arch/win32/res.rc: Added fullscreen settings dialog.

	* arch/win32/resc128.rc, arch/win32/resc64.rc,
	arch/win32/rescbm2.rc, arch/win32/respet.rc,
	arch/win32/resvic.rc: Added fullscreen menu entries.

	* arch/win32/ui.c: Include fullscreen.h.
	Added 'SaveOnResourcesExit' and 'FullScreenEnabled' to
	toggle_list.
	(ui_resources): New struct, contains resources from the UI.
	(set_fullscreen_device) (set_fullscreen_bitdpeth)
	(set_fullscreen_width) (set_fullscreen_height)
	(set_fullscreen_refreshrate) (set_fullscreen_enabled)
	(set_save_resources_on_exit): New functions.
	(resources): Added fullscreen resources.
	(cmdline_options): Added commandlines.
	(ui_init_cmdline_options): Register commandline options.
	(UI_COMMON_HOTKEYS): Added Alt-D and Alt-Enter hotkeys.
	(ui_init): Updated hotkey numbers, removed unused local
	variable, don't create status window here.
	(ui_init_finish): Call ui_fullscreen_init.
	(ui_open_canvas_window): Added fullscreen stuff.
	(ui_resize_canvas_window): Don't do anything in fullscreen.
	(ui_error) (ui_error_string): Log error message into logfile
	as well.
	(save_sanpshot_trap) (load_snapshot_trap): Suspend fullscreen
	if neccessary.
	(ui_get_main_hwnd): Always have a window handle even when the
	canvas windows hasn't been created yet.
	(handle_wm_command): Suspend fullscreen if neccessary.
	Added fullscreen settings call, and toggle fullscreen handling.
	(window_proc): Handle WM_ACTIVATEAPP message, it's not yet done
	correctly. Suspend fullscreen when neccessary. Save resources
	on exit, if it's enabled. Removed not used code, it was just
	confusing.

	* arch/win32/ui.h: Changed definition of ui_open_canvas_window.

	* arch/win32/vdc.dsp: Added vicii directory into include folder
	list.

	* arch/win32/video.c: Plenty of changes...
	Include fullscreen.h.
	(video_init) Doesn't do anything anymore.
	Removed lots of unused code.
	(video_frame_buffer_translate): New function, it translates the
	content of the framebuffer on fullscreen changes, so colors stay
	correct even when changing to different bitdepths...
	(set_physical_colors): Uses the primary surface to get the
	colors now. Fills up pixel_translate table in the canvas.
	(canvas_create): Complete rewrite, everything happens here now,
	from creating the DirectDraw object till setting its palette.
	(canvas_set_palette): Implemented function, as it was not done
	before.
	(canvas_update): Only blit safe areas onto screen, cut off extra
	frame buffer area which are used for sprites...
	(real_refresh): Removed color changes, as it was broken, will
	be reimplemented shortly. Changing the palette from the UI works
	as canvas_set_palette has been implemented. If you change your
	desktop color scheme when on an 8 bit desktop or you switch
	to an application which redefines the palette, colors will go
	bad...

	* arch/win32/videoarch.h: Added pixel_translate, dd_object,
	dd_object2, client_width, client_height added to canvas_t struct.
	Added missing prototypes.

	* raster/raster.c (raster_rebuild_tables): Rebuilds the pixel
	and refresh tables. This is needed when the palette of the
	hardware changes.

	* raster/raster.h (raster_rebuild_tables): Added prototype.

2000-08-01  Andreas Boose  <boose@linux.rz.fh-hannover.de>

	* Version 1.5.4.

	* arch/win32/res.h: Fixed drive type defines.

	* arch/win32/uidrive.c (init_dialog): Fixed drive number.

	* arch/win32/uisnapshot.c (hook_save_snapshot): Fixed warning.

	* resources.c, resources.h (resources_set_sprintf,
	resources_get_sprintf): New functions.

	* arch/unix/uisettings.c, arch/win32/uidrive.c: Use new
	resource functions.

	* fsdevice.c: Unified function for all drives.

	* arch/unix/x11/xaw/ui.c (ui_open_canvas_window): Fixed typos.

2000-07-31  Thomas Bretz  <tbretz@physik.tu-muenchen.de>

	* arch/os2/archdep.c: fixed an allocation problem in
	archdep_create_mutex_sem, added trigger_shutdown to brek64,
	archdep_startup_log_error uses xmvsprint now
   
	* arch/os2/console.c: console_out uses xmvsprintf now.
 
	* arch/os2/dialogs/dialogs.rc: small layout changes
 
	* arch/os2/dialogs/dlg-contents.c: uses xmsprintf now.
 
	* arch/os2/dialogs/dlg-drive.c: uses xmsprintf now.
 
	* arch/os2/doc/Vice_for_OS2.txt: added new cmdline parameters,
	and ToDo
 
	* arch/os2/icons/xvic.ICO: added
 
	* arch/os2/install.cmd: added the remark
 
	* arch/os2/joystick.c: can dtermin number of joysticks now
 
	* arch/os2/joystick.h: added new joystick definitions
 
	* arch/os2/kbd/kbd-c610.c, kbd-pet.c, kbd-vic20.c: deleted old
	kbd mapping
 
	* arch/os2/kbd/proc.c: deleted an output statement
 
	* arch/os2/makedist.cmd: some amall changes, os2*.vkm added,
	default.vkm deleted
 
	* arch/os2/ui.c: uses xmvsprintf now.
 
	* arch/os2/vac++/incl/c128.icc: daa.c added
 
	* arch/os2/vac++/incl/kbd.icc: removed kbd-c64.c

	* arch/os2/vac++/lpng.icc: added 

	* arch/os2/vac++/lzlib.icc: added 
 
	* arch/os2/vac++/RESID.ICC: changed version number
 
	* arch/os2/vac++/*.ICC: changed searchpath for zlib and
	lnpng106
 
	* arch/os2/vac++/X64.ICC: added kbd-c64.c
 
	* arch/os2/Vice2/VIC20/os2.vkm: added 
 
	* arch/os2/vsyncarch.c: uses xmsprintf now
 
	* utils.c: removed this strange construct for
	xmvsprintf_do_div. VAC++ cannot compile it

2000-07-30  Andreas Boose  <boose@linux.rz.fh-hannover.de>

	* Version 1.5.3.

	* c128/z80.c: Fixed opcodes and added some missing ones.

	* arch/unix/x11/xaw/ui.c, arch/unix/x11/gnome/ui.c,
	arch/unix/ui.h (ui_select_file): Changed API.

	* arch/msdos/tuiimagebrowser.c (tui_image_browser): Also
	return number of selected file.
        * arch/msdos/tuifs.c (tui_file_selector): Changed likewise.

	* arch/msdos/c128ui.c, arch/msdos/c610ui.c,
	arch/msdos/c64ui.c, arch/msdos/menudefs.c, arch/msdos/petui.c,
	arch/msdos/uiattach.c, arch/msdos/uisnapshot.c,
	arch/msdos/vic20ui.c: Changed to new file selector API.

	* arch/msdos/menudefs.c, arch/msdos/tui_backend.c,
	arch/msdos/tui.c, arch/msdos/ui.c, c1541.c: Use `xmsprintf',
	`xmvsprintf' or `stralloc' instead of using random length
	arrays.

	* vdrive/vdrive-command.c, vdrive/vdrive-command.h
	(vdrive_command_execute): Command is `const'.

	* arch/unix/uisettings.c, arch/unix/x11/xaw/uimenu.c,
	vic20/vic20mem.c, sound.c, arch/unix/x11/gnome/uimenu.c:
	Do not use `alloca()'.

	* arch/unix/x11/x11menu.c, arch/unix/x11/x11menu.h: New files.

	* arch/unix/x11/xaw/uimenu.c, arch/unix/x11/gnome/uimenu.c:
	arch/unix/x11/xaw/uimenu.h, arch/unix/x11/gnome/uimenu.h:
	Moved common stuff a level higher.

	* Makefile.am: Removed `@ALLOCA@'.

	* vice.h: Removed `alloca' compatibility cruft.

	* arch/unix/uicommands.c, arch/unix/uisettings.c: Do not use
	`PATH_VAR' and `GET_PATH_MAX'.

2000-07-28  Andreas Boose  <boose@linux.rz.fh-hannover.de>

	* Version 1.5.2.

	* raster/raster-cache.c (raster_cache_init): Clear cache for
	sprites 1..7 too.

	* utils.c, utils.h (stralloc): Bail out on NULL pointer.
	(xmsprintf): New function.

	* vdrive/vdrive-iec.c: Added debugging info.

	* c128/daa.c, c128/daa.h: New files.

	* c128/z80.c: Fixed opcodes and added some missing ones.

	* autostart.c, arch/unix/uicommands.c, arch/unix/uisettings.c,
	cmdline.c, arch/unix/vsidui.c, arch/unix/x11/xaw/uimenu.c,
	arch/unix/x11/xaw/ui.c: Use `xmsprintf', `xmvsprintf' or
	`stralloc' instead of using random length arrays.

2000-07-27  Andreas Dehmel  <dehmel@forwiss.tu-muenchen.de>

	* arch/riscos/ui.c, arch/riscos/uimsgwin.{c,h}: added support
	for WIMP Null events of message windows.

2000-07-26  Andreas Boose  <boose@linux.rz.fh-hannover.de>

	* Version 1.5.1.

	* c128/z80.c: Fixed opcodes.

	* c128/z80mem.c (z80mem_initialize): Removed color RAM from
	$1000-$13FF IO space.

2000-07-26  Thomas Bretz  <tbretz@physik.tu-muenchen.de>

	* arch/os2/archdep.c: set lower priority for main thread

	* arch/os2/kbd/parse.c: added support for CLEAR and KSYM/KSCODE

	* arch/os2/kbd/proc.c: added base support for symbolic mapping

	* arch/os2/vac++/lpng.icc: added

	* arch/os2/vac++/lzlib.icc: added

	* arch/os2/video.c: added video/vdc_free, higher priority for
	canvas mainloop

	* arch/os2/vsyncarch.c: removed video_free

	* vdc/vdc.[ch]: added vdc_free

