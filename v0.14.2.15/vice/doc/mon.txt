MONITOR DOCUMENTATION

###
<...> = type
* = zero or more occurrence
[...] = optional
address_range: (address address) | (address|+offset) | (address|-offset)
address_opt_range: (address_range) | address
breakpoint = stop on address(range)
tracepoint = print info on address(range)
watchpoint = stop on memory(range) read/write
checkpoint = breakpoint & tracepoint & watchpoint

prompt = [X,R:Y,W:Z]
         X = [S|-] S == reads have side effects
         Y = default read memory space
         Z = default write memory space
###

COMMAND: sidefx
ABBREVIATIONS: none
SYNTAX: sidefx [on|off|toggle]

FUNCTION: This command controls how monitor generated
reads affect memory locations that have read side-effects.
If the argument is 'on' then reads may cause side-effects.
If the argument is 'off' then reads don't cause side-effects.
If the argument is 'toggle' then the current mode is switched.
No argument displays the current state.


COMMAND: registers
ABBREVIATIONS: r
SYNTAX: registers [<reg_name> = <number> [, <reg_name> = <number>]*]

FUNCTION: This command allows displaying and setting the
registers of the 6502 microprocessor. Valid register names
are A, X, Y, PC and SP. 


COMMAND: return
ABBREVIATIONS: none
SYNTAX: return

FUNCTION: This command continues the execution of the 6502 and returns
to the monitor just before(after?) the next RTS or RTI is executed.


COMMAND: block read
ABBREVIATIONS: none
SYNTAX: br track sector [address]

FUNCTION: This command reads the block at the specified track
and sector. If an address is specified, the data is loaded into
memory. If no address is given, the data is displayed on the 
screen using the default datatype.


COMMAND: block write
ABBREVIATIONS: none
SYNTAX: bw track sector address

FUNCTION: This command writes a block of data at address
to the specified track and sector. 


COMMAND: set or list breakpoints
ABBREVIATIONS: none
SYNTAX: break [address]

FUNCTION: This command allows setting a breakpoint or
listing the current breakpoints. If no address is given,
the currently valid checkpoints are printed. If an address
is given, a breakpoint is set for that address and the
breakpoint number is printed.



COMMAND: set or list tracepoints
ABBREVIATIONS: none
SYNTAX: trace [address [address]]

FUNCTION: This command is similar to the break command
except that it operates on tracepoints. A tracepoint
differs from a breakpoint by not stopping execution but
simply printing the PC, giving the user an execution trace.
The second optional address can be used to specify the
end of an range of addresses to be traced.


COMMAND: set or list watchpoints
ABBREVIATIONS: none
SYNTAX: watch [address [address]]

FUNCTION: This command is similar to the previous two commands
except that it operates on watchpoints. A watchpoint
differs from the others by stopping on a read and/or write to
an address or range of addresses. If no addresses are given,
a list of all the checkpoints is printed.


COMMAND: enable and disable checkpoints
ABBREVIATIONS: none
SYNTAX: enable/disable checknum

FUNCTION: Each checkpoint can be enabled or disabled. This
command allows changing between these states.


COMMAND: ignore
ABBREVIATIONS: none
SYNTAX: ignore check_num [count]

FUNCTION: This command allows ignoring a checkpoint
a given number of crossings. If no count is given, the
default value is 1.


COMMAND: move memory contents
ABBREVIATIONS: t
SYNTAX: move address_range address 
SYNTAX: transfer address_range address 

FUNCTION: Move memory from the source specified by the address range to
the destination specified by the address. The regions may overlap.


COMMAND: compare memory contents
ABBREVIATIONS: c
SYNTAX: compare address_range address 

FUNCTION: Compare memory from the source specified by the address range to
the destination specified by the address. The regions may overlap. Any values
that miscompare are displayed using the default displaytype.


COMMAND: goto
ABBREVIATIONS: none
SYNTAX: goto address

FUNCTION: Change the PC to address and continue execution.


COMMAND: delete checkpoint
ABBREVIATIONS: none
SYNTAX: delete check_num

FUNCTION: Delete the specified checkpoint.


COMMAND: exit
ABBREVIATIONS: x
SYNTAX: exit

FUNCTION: Leave the monitor and return to execution.


COMMAND: Change displaytype.
ABBREVIATIONS: dt
SYNTAX: displaytype data_type

FUNCTION: This command sets the default data displaytype.


COMMAND: Dump/undump machine state.
ABBREVIATIONS: none
SYNTAX: dump/undump

FUNCTION: Save and restore machine state.


COMMAND: display memory contents
ABBREVIATIONS: none
SYNTAX: m [data_type] [address_opt_range]

FUNCTION: Display the contents of memory. If no datatype
is given, the default is used. If only address is specified,
the length of data displayed is based on the datatype. If
no addresses are given, the 'dot' address is used.


COMMAND: set a command to execute on checkpoint
ABBREVIATIONS: none
SYNTAX: command check_num "your_command"

FUNCTION: When checkpoint check_num is hit, the specified
command is executed by the monitor. Note that the 'x' command
is not yet supported as a command argument.


COMMAND: set the default device to read/write memory
ABBREVIATIONS: none
SYNTAX: device [c|d]

FUNCTION: Set the default memory device to either the computer
or the disk. This is equivalent to setting both the default
readspace and the default writespace.


---------------

 There are some more undocumented commands. See mon_cli.l and mon_cli.y

----------------

COMMAND:
ABBREVIATIONS:
SYNTAX:

FUNCTION:

